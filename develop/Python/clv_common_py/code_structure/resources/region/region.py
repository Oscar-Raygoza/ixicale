# -*- coding: utf-8 -*-
"""
    resources.region.region
    ~~~~~~~~~~~~~~

    Autogenerated resource to 'Region' model

    :copyright: (c) 2019 by Software Clever, Palace Resorts CEDIS.
    :author: lresendiz
    :author: ixicale
    :license: Private.
"""
from flask_restful import Resource, reqparse
from config import base, db
from schemas.region import RegionModel, RegionSchema
from flask import request
from marshmallow import ValidationError


class Region(Resource):
    def get(self, id=None):
        region = RegionModel.query.get(id)
        if region:
            region = RegionSchema.select.dump(region)
        return base.build_success_response(200, region)

    def put(self, id=None):
        data = request.get_json(force=True)
        data["iddef_region"] = id
        try:
            region = RegionSchema.update.load(
                data,
                instance=RegionModel.query.get(id),
                # partial=True
            )
            db.session.commit()
            return base.build_success_response(204)
        except ValidationError as err:
            return base.build_error_response(400, err.messages)
        except Exception as e:
            return base.build_error_response(500, message=str(e))


class Regions(Resource):
    def get(self):
        regions = RegionModel.query.all()
        if regions:
            regions = RegionSchema.select_many.dump(regions)
        return base.build_success_response(200, regions)

    def post(self):
        data = request.get_json(force=True)
        try:
            region = RegionSchema.create.load(data)
            db.session.add(region)
            db.session.commit()
            return base.build_success_response(201)
        except ValidationError as err:
            return base.build_error_response(400, err.messages)
        except Exception as e:
            return base.build_error_response(500, message=str(e))


class RegionsFilters(Resource):
    #: example filter
    def get(self):
        parser = reqparse.RequestParser()
        parser.add_argument(
            "usuario_creacion", location="args", store_missing=False
        )
        parser.add_argument(
            "estado",
            location="args",
            store_missing=False,
            choices=[0, 1],
            type=int,
        )
        args = parser.parse_args()

        regions = RegionModel.query.filter_by(**args).all()
        if regions:
            regions = RegionSchema.select_many.dump(regions)
        return base.build_success_response(200, regions)
